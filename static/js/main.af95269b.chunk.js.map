{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","clickNext","props","infinite","images","itemWidth","step","frameSize","stepWidth","maxRight","length","currentLeft","setState","clickPrev","this","animationDuration","className","style","width","height","left","transition","map","image","i","src","alt","type","onClick","React","Component","App","handleChange","event","currentTarget","name","value","stateValue","checked","previousState","min","max","defaultValue","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af95269b.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  position: number;\n};\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nclass Carousel extends React.Component < Props, State > {\n  state = {\n    position: 0,\n  };\n\n  clickNext = () => {\n    const { position } = this.state;\n    const {\n      infinite,\n      images,\n      itemWidth,\n      step,\n      frameSize,\n    } = this.props;\n\n    const stepWidth = itemWidth * step;\n    const maxRight = (images.length * -itemWidth) + (itemWidth * frameSize);\n    const currentLeft = ((position - stepWidth) < maxRight)\n      ? maxRight\n      : position - stepWidth;\n\n    this.setState({\n      position: (position === maxRight && infinite)\n        ? 0\n        : currentLeft,\n    });\n  };\n\n  clickPrev = () => {\n    const { position } = this.state;\n    const {\n      infinite,\n      images,\n      itemWidth,\n      step,\n      frameSize,\n    } = this.props;\n\n    const maxRight = (images.length * -itemWidth) + (itemWidth * frameSize);\n    const stepWidth = itemWidth * step;\n    const currentLeft = ((position + stepWidth) > 0)\n      ? 0\n      : position + stepWidth;\n\n    this.setState({\n      position: (position === 0 && infinite)\n        ? maxRight\n        : currentLeft,\n    });\n  };\n\n  render() {\n    const {\n      position,\n    } = this.state;\n\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    return (\n      <div className=\"carousel\">\n        <div\n          className=\"carousel__wraper\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n            height: `${itemWidth}px`,\n          }}\n        >\n          <ul\n            className=\"carousel__list\"\n            style={{\n              left: `${position}px`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            {\n              images.map((image, i) => {\n                return (\n                  <li\n                    key={image}\n                    className=\"carousel__item\"\n                    style={{\n                      width: `${itemWidth}px`,\n                      height: `${itemWidth}px`,\n                    }}\n                  >\n                    <img\n                      src={image}\n                      alt={`${i + 1}`}\n                    />\n                  </li>\n                );\n              })\n            }\n          </ul>\n        </div>\n\n        <div className=\"carousel__buttons\">\n          <button\n            className=\"carousel__button\"\n            type=\"button\"\n            onClick={this.clickPrev}\n          >\n            Prev\n          </button>\n\n          <button\n            className=\"carousel__button\"\n            type=\"button\"\n            onClick={this.clickNext}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const { name, value } = event.currentTarget;\n    const stateValue = (name === 'infinite')\n      ? event.currentTarget.checked\n      : +value;\n\n    this.setState(previousState => ({\n      ...previousState,\n      [name]: stateValue,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <form\n          className=\"app__form\"\n        >\n          <label className=\"app__label\">\n            Frame size:\n            <input\n              className=\"app__input\"\n              min={1}\n              max={10}\n              name=\"frameSize\"\n              type=\"number\"\n              defaultValue={frameSize}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className=\"app__label\">\n            Step:\n            <input\n              className=\"app__input\"\n              min={1}\n              max={5}\n              name=\"step\"\n              type=\"number\"\n              defaultValue={step}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className=\"app__label\">\n            Item width:\n            <input\n              className=\"app__input\"\n              min={50}\n              max={400}\n              name=\"itemWidth\"\n              type=\"number\"\n              defaultValue={itemWidth}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className=\"app__label\">\n            Animation:\n            <input\n              className=\"app__input\"\n              min={100}\n              max={10000}\n              name=\"animationDuration\"\n              type=\"number\"\n              defaultValue={animationDuration}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className=\"app__label\">\n            Infinite:\n            <input\n              name=\"infinite\"\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={this.handleChange}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}